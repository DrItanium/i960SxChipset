; PlatformIO Project Configuration File for MightyCore
; https://github.com/MCUdude/MightyCore/
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed, and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options
; https://github.com/MCUdude/MightyCore/blob/master/PlatformIO.md
; https://docs.platformio.org/page/projectconf.html


[platformio]
default_envs = 1284p, adafruit_grandcentral_m4 ; Default build target

[common]

; Common settings for all environments
[env]
framework = arduino
; BUILD OPTIONS
; Comment out to enable LTO (this line unflags it)
build_unflags =
  -flto
  -std=gnu++11
; Extra build flags
build_flags =
  -std=gnu++17

lib_deps =
  arduino-fsm
  ArduinoJson
  adafruit/Adafruit GFX Library
  adafruit/Adafruit BusIO
  adafruit/Adafruit ILI9341
  adafruit/Adafruit seesaw Library
  adafruit/Adafruit LIS3MDL
  adafruit/Adafruit Unified Sensor
  adafruit/Adafruit ADXL343
  adafruit/Adafruit LSM6DS
  adafruit/Adafruit ADT7410 Library
  adafruit/Adafruit SSD1306

[env:1284p]
platform = atmelavr
; TARGET SETTINGS
; Chip in use
board = ATmega1284P
; Clock frequency in [Hz]
board_build.f_cpu = 20000000L
; Current pinout
board_build.variant = standard
;  Serial bootloader protocol
upload_protocol = arduino
; Serial upload port
;upload_port = /dev/cu.usbserial*
upload_port = /dev/ttyUSB*
; Get upload baud rate defined in the fuses_bootloader environment
board_upload.speed = ${env:1284p_fuses_bootloader.board_bootloader.speed}
; SERIAL MONITOR OPTIONS
; Serial monitor port defined in the Upload_UART environment
monitor_port = ${env:1284p.upload_port}
; Serial monitor baud rate
monitor_speed = 9600

build_flags =
  ${env.build_flags}
  -DUSES_DISPLAY_SHIELD

; Run the following command to set fuses
; pio run -e fuses_bootloader -t fuses
; Run the following command to set fuses + burn bootloader
; pio run -e fuses_bootloader -t bootloader
[env:1284p_fuses_bootloader]
platform = atmelavr
; TARGET SETTINGS
; Chip in use
board = ATmega1284P
board_hardware.oscillator = external ; Oscillator type
board_hardware.uart = uart0          ; Set UART to use for serial upload
board_bootloader.speed = 115200      ; Set bootloader baud rate
board_hardware.bod = 2.7v            ; Set brown-out detection
board_hardware.eesave = yes          ; Preserve EEPROM when uploading using programmer
board_hardware.ckout = yes			 ; Treat D1 as CLKO?
upload_protocol = stk500v1
upload_port = /dev/ttyACM0
upload_speed = 19200
upload_flags =
  -P$UPLOAD_PORT
  -b$UPLOAD_SPEED
;upload_protocol = arduinoisp
;upload_flags =                       ; Select USB as upload port and divide the SPI clock by 8
;  -PUSB
;  -B8


[env:adafruit_grandcentral_m4]
platform = atmelsam
board = adafruit_grandcentral_m4

; change microcontroller
board_build.mcu = samd51p20a

; change MCU frequency
board_build.f_cpu = 120000000L
lib_deps =
  ${env.lib_deps}

build_flags =
  ${env.build_flags}
  -DHAS_BUILTIN_SDCARD
  -DUSES_DISPLAY_SHIELD

[env:adafruit_metro_m4_express]
platform = atmelsam
board = adafruit_metro_m4

; change microcontroller
board_build.mcu = samd51j19a

; change MCU frequency
board_build.f_cpu = 120000000L
lib_deps =
  ${env.lib_deps}

build_flags =
  ${env.build_flags}
  -DUSES_DISPLAY_SHIELD

[env:adafruit_feather_m0_adalogger]
platform = atmelsam
board = adafruit_feather_m0

; change microcontroller
board_build.mcu = samd21g18a

; change MCU frequency
board_build.f_cpu = 48000000L
; all of the extra sensor wings
lib_deps =
  ${env.lib_deps}


build_flags =
  ${env.build_flags}
  -DHAS_BUILTIN_SDCARD
